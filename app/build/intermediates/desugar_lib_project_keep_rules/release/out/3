-keep class java.util.function.ToDoubleFunction
-keep class java.util.function.Function
-keep class j$.time.DayOfWeek {
    j$.time.DayOfWeek MONDAY;
}
-keep class j$.util.function.ToLongFunction
-keep class java.util.function.ToLongFunction
-keep class j$.util.function.ToIntFunction
-keep class j$.time.LocalDate {
    j$.time.LocalDate plusWeeks(long);
    j$.time.LocalDate with(j$.time.temporal.TemporalAdjuster);
    j$.time.LocalDate now();
    j$.time.LocalDateTime atStartOfDay();
}
-keep class j$.time.temporal.TemporalAdjusters {
    j$.time.temporal.TemporalAdjuster previousOrSame(j$.time.DayOfWeek);
}
-keep class j$.time.LocalDateTime {
    j$.time.ZonedDateTime atZone(j$.time.ZoneId);
    j$.time.LocalDate toLocalDate();
    j$.time.LocalDateTime ofInstant(j$.time.Instant, j$.time.ZoneId);
}
-keep class j$.time.temporal.TemporalAdjuster
-keep class j$.$r8$wrapper$java$util$function$ToIntFunction$-V-WRP {
    j$.util.function.ToIntFunction convert(java.util.function.ToIntFunction);
}
-keep class j$.$r8$wrapper$java$util$function$Function$-V-WRP {
    j$.util.function.Function convert(java.util.function.Function);
}
-keep class j$.$r8$wrapper$java$util$function$ToLongFunction$-V-WRP {
    j$.util.function.ToLongFunction convert(java.util.function.ToLongFunction);
}
-keep class j$.util.function.Function
-keep class java.util.function.ToIntFunction
-keep class j$.$r8$retargetLibraryMember$virtualDispatch$Date$toInstant$dispatchHolder {
    j$.time.Instant toInstant(java.util.Date);
}
-keep class j$.util.function.ToDoubleFunction
-keep class j$.time.temporal.ChronoUnit {
    j$.time.temporal.ChronoUnit WEEKS;
    long between(j$.time.temporal.Temporal, j$.time.temporal.Temporal);
}
-keep class j$.util.Comparator { *; }
-keep class j$.util.Comparator$-CC {
    java.util.Comparator $default$thenComparingLong(java.util.Comparator, j$.util.function.ToLongFunction);
    java.util.Comparator $default$thenComparingDouble(java.util.Comparator, j$.util.function.ToDoubleFunction);
    java.util.Comparator $default$reversed(java.util.Comparator);
    java.util.Comparator $default$thenComparing(java.util.Comparator, j$.util.function.Function, java.util.Comparator);
    java.util.Comparator $default$thenComparing(java.util.Comparator, j$.util.function.Function);
    java.util.Comparator $default$thenComparingInt(java.util.Comparator, j$.util.function.ToIntFunction);
    java.util.Comparator $default$thenComparing(java.util.Comparator, java.util.Comparator);
}
-keep class j$.$r8$wrapper$java$util$function$ToDoubleFunction$-V-WRP {
    j$.util.function.ToDoubleFunction convert(java.util.function.ToDoubleFunction);
}
-keep class j$.time.ZonedDateTime {
    j$.time.Instant toInstant();
}
-keep class j$.time.ZoneId {
    j$.time.ZoneId systemDefault();
}
-keep class j$.time.temporal.Temporal
-keep class j$.time.Instant {
    j$.time.Instant ofEpochMilli(long);
    long toEpochMilli();
}
